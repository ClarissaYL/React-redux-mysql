列出所有已启动的容器:docker ps
删除一个容器：docker rm 
强制删除一个容器：docker rm -f 
强制删除全部容器：docker rm -f $(docker ps -aq)
杀死所有正在运行的容器：docker kill $(docker ps -a -q)
删除所有已经停止的容器：docker rm $(docker ps -a -q)
删除所有镜像：docker rmi $(docker images -q)
强制删除所有镜像：docker rmi -f $(docker images -q)

byfn.sh的执行格式为：./byfn.sh (up|down|restart|generate|upgrade)
up：启动
down：清除网络
restart：重新启动
generate：生成证书及创世块
upgrade：将网络从1.0升级到1.1

-c：用于指定channelName，默认值"mychannel"
-t：CLI timeout时间，默认值10
-d：延迟启动，默认值3
-f：使用指定的网络拓扑结构文件，默认使用docker-compose-cli.yaml
-s：指定使用的数据库，可选 goleveldb或couchdb
-l：指定chaincode使用的语言，可选golang 或node
-i：指定镜像tag，默认 "latest"
详细参数可通过./byfn.sh help查看。

整个网络的启动执行了以下操作：
1、生成创世区块、通道、每个组织的msp等信息，保存在channel-artifacts文件夹中，配置信息对应configtx.yaml文件。
2、生成orderer和peer使用的公私钥和证书等信息，保存在crypto-config文件夹中，配置信息对应crypto-config.yaml文件。
3、创建channel、加入channel、为通道的每个组织设置锚节点，安装chaincode，实例化chaincode，查询chaincode，调用chaincode等操作。
